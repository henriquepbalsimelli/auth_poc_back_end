# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.8.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        npm install @octokit/rest
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest tests
    - name: Run tests with coverage
      run: |
        pytest --cov=tests tests/
        coverage report --fail-under=80
    - name: Criar Issue em caso de falha nos testes
      if: ${{ failure() }}
      run: |
        curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.TOKEN_TEST }}"\
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/henriquepbalsimelli/auth_poc_back_end/issues \
          -d '{"title":"Found a bug","body":"I'\''m having a problem with this.","labels":["bug"]}'
    - name: Extract coverage percentage
      id: coverage
      run: |
        coverage_percentage=$(coverage report | awk 'END{print $NF}' | cut -d '%' -f 1)
        echo $coverage_percentage
    - name: Set coverage percentage output
      run: echo "{percentage}={$coverage_percentage}" >> $GITHUB_OUTPUT
      env:
        coverage_percentage: ${{ steps.coverage.outputs.coverage_percentage }}
    - name: Add coverage comment
      uses: actions/github-script@v4
      with:
        script: |
          const { Octokit } = require("@octokit/rest")
          
          const token = "${{ secrets.TKN_PR }}"
          
          const octokit = new Octokit({ auth: token })
          
          const prNumber = ${{ github.event.pull_request.number }}
          
          let coveragePercentage = ${{ steps.coverage.outputs.coverage_percentage }}
          if (!coveragePercentage) {
            coveragePercentage = ${{ steps.coverage.outputs.coverage }}
          }
          
          const owner = "${{ github.repository_owner }}"

          const repository = "${{ github.repository }}"

          let comment = ''
          if (coveragePercentage >= 80) {
            comment = `:white_check_mark: Code coverage: ${coveragePercentage}% - All tests passed!`
          } else {
            comment = `:x: Code coverage: ${coveragePercentage}% - Please improve test coverage.`
          }

          const response = await octokit.pulls.update(`PATCH /repos/${repository}/pulls/${prNumber}`, {
              owner: owner,
              repo: 'auth_poc_back_end',
              pull_number:  prNumber ,
              title: 'new title',
              body: 'BODY TESTE @',
              state: 'open',
              base: 'master',
              headers: {
                  'X-GitHub-Api-Version': '2022-11-28'
              }
          })